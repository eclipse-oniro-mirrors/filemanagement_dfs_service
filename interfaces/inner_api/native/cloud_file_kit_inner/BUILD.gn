# Copyright (C) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/filemanagement/dfs_service/distributedfile.gni")

config("public_config") {
  include_dirs = [
    ".",
    "${innerkits_native_path}/cloud_file_kit_inner/big_data_statistics",
    "${innerkits_native_path}/cloudsync_kit_inner",
  ]
}

config("private_config") {
  include_dirs = []
}

config("optimize-size") {
  cflags = [
    "-fvisibility=hidden",
    "-fdata-sections",
    "-ffunction-sections",
    "-Oz",
  ]
  cflags_cc = [
    "-fvisibility-inlines-hidden",
    "-Oz",
  ]
}

ohos_shared_library("cloudfile_kit") {
  branch_protector_ret = "pac_ret"
  config = [ ":optimize-size" ]
  sanitize = {
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  big_data_statistics = [ "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/big_data_statistics/gallery_download_file_stat.cpp" ]

  data_sync = [
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/data_sync/data_syncer_rdb_store.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/data_sync/sync_state_manager.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/data_sync/task_state_manager.cpp",
  ]

  sync_rule = [
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/sync_rule/battery_status.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/sync_rule/cloud_status.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/sync_rule/net_conn_callback_observer.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/sync_rule/network_set_manager.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/sync_rule/network_status.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/sync_rule/screen_status.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/sync_rule/system_load.cpp",
  ]

  sources = [
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/cloud_asset_read_session.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/cloud_assets_downloader.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/cloud_database.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/cloud_file_kit.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/cloud_sync_helper.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/data_sync_manager.cpp",
  ]

  sources += big_data_statistics
  sources += data_sync
  sources += sync_rule

  defines = [
    "LOG_DOMAIN=0xD004311",
    "LOG_TAG=\"CLOUD_FILE_KIT\"",
  ]

  configs = [ ":private_config" ]
  public_configs = [ ":public_config" ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_base:zuri",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_consumer",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "init:libbegetutil",
    "ipc:ipc_single",
    "netmanager_base:net_conn_manager_if",
    "power_manager:powermgr_client",
    "relational_store:native_rdb",
    "samgr:samgr_proxy",
  ]

  if (cloudsync_service_power) {
    external_deps += [ "battery_manager:batterysrv_client" ]

    defines += [ "SUPPORT_POWER" ]
  }

  if (cloudsync_service_resource_schedule) {
    external_deps += [ "resource_schedule_service:ressched_client" ]
    defines += [ "CLOUDSYNC_SERVICE_RESOURCE_SCHEDULE" ]
  }

  deps = [ "${utils_path}:libdistributedfileutils" ]

  use_exceptions = true
  innerapi_tags = [ "platformsdk" ]
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}

config("cloudfile_kit_lite_public_config") {
  include_dirs = [
    ".",
    "${innerkits_native_path}/cloudsync_kit_inner",
  ]
}

ohos_shared_library("cloudfile_kit_core") {
  branch_protector_ret = "pac_ret"
  config = [ ":optimize-size" ]
  sanitize = {
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  sources = [
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/cloud_asset_read_session.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/cloud_assets_downloader.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/cloud_database.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/cloud_file_kit.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/cloud_sync_helper.cpp",
    "${distributedfile_path}/frameworks/native/cloud_file_kit_inner/src/data_sync_manager.cpp",
  ]

  defines = [
    "LOG_DOMAIN=0xD004311",
    "LOG_TAG=\"CLOUD_FILE_KIT\"",
  ]

  public_configs = [ ":cloudfile_kit_lite_public_config" ]

  external_deps = [ "hilog:libhilog" ]

  deps = [ "${utils_path}:libdistributedfileutils_lite" ]

  use_exceptions = true
  innerapi_tags = [ "platformsdk" ]
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}
