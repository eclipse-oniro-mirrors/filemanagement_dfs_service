# Copyright (C) 2023-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/filemanagement/dfs_service/distributedfile.gni")

ohos_unittest("fuse_manager_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "${distributedfile_path}/services/cloudfiledaemon/src/fuse_manager/cloud_daemon_statistic.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/fuse_manager/fuse_manager.cpp",
    "${services_path}/cloudfiledaemon/src/utils/setting_data_helper.cpp",
    "fuse_manager_test.cpp",
    "mock/libfuse_mock.cpp",
    "mock/system_function_mock.cpp",
  ]
  cloud_disk = [
    "${services_path}/cloudfiledaemon/src/cloud_disk/database_manager.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_base.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_cloud.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_local.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/fuse_operations.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/cloud_disk/file_operations_helper.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/account_status.cpp",
  ]

  sources += cloud_disk

  include_dirs = [
    "${distributedfile_path}/services/cloudfiledaemon/include",
    "${distributedfile_path}/services/cloudfiledaemon/include/fuse_manager",
    "${distributedfile_path}/utils/ioctl/include",
    "${services_path}/cloudfiledaemon/include/cloud_disk/",
    "${services_path}/cloudfiledaemon/include/utils/",
    "${services_path}/cloudfiledaemon/src/fuse_manager",
    "${distributedfile_path}/adapter/cloud_adapter_example/include",
    "${clouddisk_database_path}/include",
    "${distributedfile_path}/test/unittests/services_daemon/mock",
  ]

  deps = [
    "${clouddisk_database_path}:clouddisk_database",
    "${innerkits_native_path}/cloud_daemon_kit_inner:cloud_daemon_kit_inner",
    "${innerkits_native_path}/cloud_file_kit_inner:cloudfile_kit",
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
    "${utils_path}:libdistributedfileutils_lite",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:dataobs_manager",
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "libfuse:libfuse",
    "relational_store:native_rdb",
  ]

  defines = [
    "private=public",
    "LOG_DOMAIN=0xD004308",
    "LOG_TAG=\"CloudFileDaemon\"",
    "strdup=StrdupMock",
  ]

  if (cloudsync_service_hicollie_enable) {
    external_deps += [ "hicollie:libhicollie" ]
    defines += [ "HICOLLIE_ENABLE" ]
  }

  use_exceptions = true
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}

ohos_unittest("cloud_daemon_statistic_static_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "cloud_daemon_statistic_static_test.cpp",
  ]

  cloud_disk = [
    "${services_path}/cloudfiledaemon/src/cloud_disk/database_manager.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_base.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_cloud.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_local.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/fuse_operations.cpp",
  ]

  sources += cloud_disk

  include_dirs = [
    "${distributedfile_path}/services/cloudfiledaemon/include",
    "${distributedfile_path}/services/cloudfiledaemon/include/fuse_manager",
    "${distributedfile_path}/services/cloudfiledaemon/src/fuse_manager",
    "${distributedfile_path}/utils/ioctl/include",
    "${services_path}/cloudfiledaemon/include/cloud_disk/",
    "${distributedfile_path}/adapter/cloud_adapter_example/include",
    "${clouddisk_database_path}/include",
  ]

  deps = [
    "${clouddisk_database_path}:clouddisk_database",
    "${innerkits_native_path}/cloud_daemon_kit_inner:cloud_daemon_kit_inner",
    "${innerkits_native_path}/cloud_file_kit_inner:cloudfile_kit",
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
    "${utils_path}:libdistributedfileutils_lite",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:dataobs_manager",
    "c_utils:utils",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "libfuse:libfuse",
    "relational_store:native_rdb",
  ]

  defines = [
    "private=public",
    "LOG_DOMAIN=0xD004308",
    "LOG_TAG=\"CloudFileDaemon\"",
  ]

  if (cloudsync_service_hicollie_enable) {
    external_deps += [ "hicollie:libhicollie" ]
    defines += [ "HICOLLIE_ENABLE" ]
  }

  use_exceptions = true
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}

ohos_unittest("cloud_daemon_statistic_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "${distributedfile_path}/services/cloudfiledaemon/src/fuse_manager/cloud_daemon_statistic.cpp",
    "cloud_daemon_statistic_test.cpp",
  ]

  cloud_disk = [
    "${services_path}/cloudfiledaemon/src/cloud_disk/database_manager.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_base.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_cloud.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_local.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/fuse_operations.cpp",
  ]

  sources += cloud_disk

  include_dirs = [
    "${distributedfile_path}/services/cloudfiledaemon/include",
    "${distributedfile_path}/services/cloudfiledaemon/include/fuse_manager",
    "${distributedfile_path}/utils/ioctl/include",
    "${services_path}/cloudfiledaemon/include/cloud_disk/",
    "${distributedfile_path}/adapter/cloud_adapter_example/include",
    "${clouddisk_database_path}/include",
  ]

  deps = [
    "${clouddisk_database_path}:clouddisk_database",
    "${innerkits_native_path}/cloud_daemon_kit_inner:cloud_daemon_kit_inner",
    "${innerkits_native_path}/cloud_file_kit_inner:cloudfile_kit",
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
    "${utils_path}:libdistributedfileutils_lite",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:dataobs_manager",
    "c_utils:utils",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "libfuse:libfuse",
    "relational_store:native_rdb",
  ]

  defines = [
    "private=public",
    "LOG_DOMAIN=0xD004308",
    "LOG_TAG=\"CloudFileDaemon\"",
  ]

  if (cloudsync_service_hicollie_enable) {
    external_deps += [ "hicollie:libhicollie" ]
    defines += [ "HICOLLIE_ENABLE" ]
  }

  use_exceptions = true
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}

ohos_unittest("cloud_daemon_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "${distributedfile_path}/services/cloudfiledaemon/src/fuse_manager/cloud_daemon_statistic.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/fuse_manager/fuse_manager.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/ipc/cloud_daemon.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/ipc/cloud_daemon_stub.cpp",
    "${services_path}/cloudfiledaemon/src/utils/setting_data_helper.cpp",
    "cloud_daemon_test.cpp",
    "mock/system_function_mock.cpp",
  ]

  cloud_disk = [
    "${services_path}/cloudfiledaemon/src/cloud_disk/database_manager.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_base.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_cloud.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_local.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/fuse_operations.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/cloud_disk/file_operations_helper.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/account_status.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/account_status_listener.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/appstate_observer.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/io_message_listener.cpp",
  ]

  sources += cloud_disk

  include_dirs = [
    "${distributedfile_path}/services/cloudfiledaemon/include",
    "${services_path}/cloudfiledaemon/include/cloud_disk/",
    "${distributedfile_path}/adapter/cloud_adapter_example/include",
    "${clouddisk_database_path}/include",
    "${distributedfile_path}/test/unittests/services_daemon/mock",
    "${distributedfile_path}/services/cloudfiledaemon/include/fuse_manager",
    "${distributedfile_path}/interfaces/inner_api/native",
    "${distributedfile_path}/interfaces/inner_api/native/cloud_file_kit_inner/big_data_statistics",
    "${distributedfile_path}/utils/ioctl/include",
    "${utils_path}/cloud_disk/include",
    "${utils_path}/dentry/include",
    "${utils_path}/log/include",
    "${utils_path}/system/include",
    "${innerkits_native_path}/cloud_daemon_kit_inner",
    "${innerkits_native_path}/cloud_file_kit_inner/big_data_statistics",
    "${services_path}/cloudfiledaemon/include/fuse_manager/",
    "${services_path}/cloudfiledaemon/include/ipc/",
    "${services_path}/cloudfiledaemon/include/utils/",
    "${services_path}/cloudsyncservice/include/data_sync/",
  ]

  deps = [
    "${clouddisk_database_path}:clouddisk_database",
    "${innerkits_native_path}/cloud_daemon_kit_inner:cloud_daemon_kit_inner",
    "${innerkits_native_path}/cloud_file_kit_inner:cloudfile_kit_core",
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
    "${utils_path}:libdistributedfileutils_lite",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:dataobs_manager",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_consumer",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "libfuse:libfuse",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "ability_runtime:app_manager",
  ]

  defines = [
    "private=public",
    "LOG_DOMAIN=0xD004308",
    "LOG_TAG=\"CloudFileDaemon\"",
    "access=AccessMock",
  ]

  if (cloudsync_service_hicollie_enable) {
    external_deps += [ "hicollie:libhicollie" ]
    defines += [ "HICOLLIE_ENABLE" ]
  }

  use_exceptions = true
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}

ohos_unittest("cloud_daemon_nomock_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "${distributedfile_path}/services/cloudfiledaemon/src/fuse_manager/cloud_daemon_statistic.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/fuse_manager/fuse_manager.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/ipc/cloud_daemon.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/ipc/cloud_daemon_stub.cpp",
    "${services_path}/cloudfiledaemon/src/utils/setting_data_helper.cpp",
    "cloud_daemon_nomock_test.cpp",
  ]

  cloud_disk = [
    "${services_path}/cloudfiledaemon/src/cloud_disk/database_manager.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_base.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_cloud.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_local.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/fuse_operations.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/cloud_disk/file_operations_helper.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/account_status.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/account_status_listener.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/appstate_observer.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/io_message_listener.cpp",
  ]

  sources += cloud_disk

  include_dirs = [
    "${distributedfile_path}/services/cloudfiledaemon/include",
    "${services_path}/cloudfiledaemon/include/cloud_disk/",
    "${distributedfile_path}/adapter/cloud_adapter_example/include",
    "${clouddisk_database_path}/include",
    "${distributedfile_path}/test/unittests/services_daemon/mock",
    "${distributedfile_path}/services/cloudfiledaemon/include/fuse_manager",
    "${distributedfile_path}/interfaces/inner_api/native",
    "${distributedfile_path}/interfaces/inner_api/native/cloud_file_kit_inner/big_data_statistics",
    "${distributedfile_path}/utils/ioctl/include",
    "${utils_path}/cloud_disk/include",
    "${utils_path}/dentry/include",
    "${utils_path}/log/include",
    "${utils_path}/system/include",
    "${innerkits_native_path}/cloud_daemon_kit_inner",
    "${innerkits_native_path}/cloud_file_kit_inner/big_data_statistics",
    "${services_path}/cloudfiledaemon/include/fuse_manager/",
    "${services_path}/cloudfiledaemon/include/ipc/",
    "${services_path}/cloudfiledaemon/include/utils/",
    "${services_path}/cloudsyncservice/include/data_sync/",
  ]

  deps = [
    "${clouddisk_database_path}:clouddisk_database",
    "${innerkits_native_path}/cloud_daemon_kit_inner:cloud_daemon_kit_inner",
    "${innerkits_native_path}/cloud_file_kit_inner:cloudfile_kit_core",
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
    "${utils_path}:libdistributedfileutils_lite",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:dataobs_manager",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_consumer",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "libfuse:libfuse",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "ability_runtime:app_manager",
  ]

  defines = [
    "private=public",
    "LOG_DOMAIN=0xD004308",
    "LOG_TAG=\"CloudFileDaemon\"",
  ]

  if (cloudsync_service_hicollie_enable) {
    external_deps += [ "hicollie:libhicollie" ]
    defines += [ "HICOLLIE_ENABLE" ]
  }

  use_exceptions = true
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}

ohos_unittest("cloud_daemon_stub_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "${distributedfile_path}/services/cloudfiledaemon/src/ipc/cloud_daemon_stub.cpp",
    "cloud_daemon_stub_test.cpp",
  ]

  include_dirs = [
    "${distributedfile_path}/services/cloudfiledaemon/include",
    "${services_path}/cloudsyncservice/include/data_sync/",
    "${distributedfile_path}/adapter/cloud_adapter_example/include",
  ]

  deps = [
    "${innerkits_native_path}/cloud_daemon_kit_inner:cloud_daemon_kit_inner",
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
  ]

  external_deps = [
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_single",
    "libfuse:libfuse",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  defines = [
    "private=public",
    "LOG_DOMAIN=0xD004308",
    "LOG_TAG=\"CloudFileDaemon\"",
  ]

  use_exceptions = true
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}

ohos_unittest("fuse_manager_static_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "${distributedfile_path}/services/cloudfiledaemon/src/fuse_manager/cloud_daemon_statistic.cpp",
    "${distributedfile_path}/test/unittests/cloud_disk/mock/libfuse_mock.cpp",
    "fuse_manager_static_test.cpp",
    "mock/libfuse_mock.cpp",
  ]
  cloud_disk = [
    "${services_path}/cloudfiledaemon/src/cloud_disk/database_manager.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_base.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_cloud.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/file_operations_local.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/fuse_operations.cpp",
    "${distributedfile_path}/services/cloudfiledaemon/src/cloud_disk/file_operations_helper.cpp",
    "${services_path}/cloudfiledaemon/src/cloud_disk/account_status.cpp",
  ]

  sources += cloud_disk

  include_dirs = [
    "${distributedfile_path}/test/unittests/cloud_disk/mock",
    "${distributedfile_path}/services/cloudfiledaemon/include",
    "${distributedfile_path}/services/cloudfiledaemon/include/fuse_manager",
    "${distributedfile_path}/utils/ioctl/include",
    "${services_path}/cloudfiledaemon/include/cloud_disk/",
    "${services_path}/cloudfiledaemon/src/fuse_manager",
    "${distributedfile_path}/adapter/cloud_adapter_example/include",
    "${clouddisk_database_path}/include",
  ]

  deps = [
    "${clouddisk_database_path}:clouddisk_database",
    "${innerkits_native_path}/cloud_daemon_kit_inner:cloud_daemon_kit_inner",
    "${innerkits_native_path}/cloud_file_kit_inner:cloudfile_kit",
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
    "${utils_path}:libdistributedfileutils_lite",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:dataobs_manager",
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "libfuse:libfuse",
    "relational_store:native_rdb",
  ]

  defines = [
    "private=public",
    "LOG_DOMAIN=0xD004308",
    "LOG_TAG=\"CloudFileDaemon\"",
    "strdup=StrdupMock",
  ]

  if (cloudsync_service_hicollie_enable) {
    external_deps += [ "hicollie:libhicollie" ]
    defines += [ "HICOLLIE_ENABLE" ]
  }

  use_exceptions = true
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}

ohos_unittest("setting_data_helper_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "${services_path}/cloudfiledaemon/src/utils/setting_data_helper.cpp",
    "mock/data_helper_mock.cpp",
    "setting_data_helper_test.cpp",
  ]

  include_dirs = [
    "${clouddisk_database_path}/include",
    "${distributedfile_path}/interfaces/inner_api/native/cloudsync_kit_inner",
    "${distributedfile_path}/services/cloudfiledaemon/include",
    "${distributedfile_path}/services/cloudfiledaemon/include/cloud_disk",
    "${distributedfile_path}/services/cloudfiledaemon/include/fuse_manager",
    "${distributedfile_path}/services/cloudfiledaemon/include/utils",
    "${innerkits_native_path}/cloud_daemon_kit_inner",
    "${innerkits_native_path}/cloud_file_kit_inner",
    "${innerkits_native_path}/cloud_file_kit_inner/big_data_statistics",
    "${services_path}/cloudfiledaemon/include/ipc/",
    "${services_path}/cloudfiledaemon/src/fuse_manager",
    "${services_path}/cloudsyncservice/include/data_sync/",
    "${utils_path}/cloud_disk/include",
    "${utils_path}/dentry/include",
    "${utils_path}/log/include",
    "mock"
  ]

  deps = [
    "${utils_path}:libdistributedfileutils_lite",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:dataobs_manager",
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "data_share:datashare_consumer",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "libfuse:libfuse",
    "relational_store:native_rdb",
  ]

  defines = [
    "private=public",
    "LOG_DOMAIN=0xD004308",
    "LOG_TAG=\"SettingDataHelperTest\"",
  ]

  if (cloudsync_service_hicollie_enable) {
    external_deps += [ "hicollie:libhicollie" ]
    defines += [ "HICOLLIE_ENABLE" ]
  }

  use_exceptions = true
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}

group("services_daemon_test") {
  testonly = true

  deps = [
    ":cloud_daemon_statistic_test",
    ":cloud_daemon_statistic_static_test",
    ":cloud_daemon_stub_test",
    ":cloud_daemon_test",
    ":fuse_manager_test",
    ":fuse_manager_static_test",
    ":setting_data_helper_test",
    ":cloud_daemon_nomock_test",
  ]
}
