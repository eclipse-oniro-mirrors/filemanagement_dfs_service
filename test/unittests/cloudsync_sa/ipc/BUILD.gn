# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/filemanagement/dfs_service/distributedfile.gni")

ohos_unittest("cloud_sync_service_stub_test") {
  module_out_path = "filemanagement/dfs_service"

  sources = [ "cloud_sync_service_stub_test.cpp" ]

  include_dirs = [
    "${services_path}/cloudsyncservice/include/ipc",
    "${distributedfile_path}/test/unittests/cloudsync_api/cloudsync_impl/include",
  ]

  deps = [
    "${services_path}/cloudsyncservice:cloudsync_sa",
    "${utils_path}:libdistributedfileutils",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "dfs_service:cloudsync_kit_inner",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  defines = [ "private=public" ]

  use_exceptions = true
}

ohos_unittest("cloud_sync_service_test") {
  module_out_path = "filemanagement/dfs_service"

  sources = [ "cloud_sync_service_test.cpp" ]

  include_dirs = [
    "${services_path}/cloudsyncservice/include/ipc",
    "${distributedfile_path}/test/unittests/cloudsync_api/cloudsync_impl/include",
  ]

  deps = [
    "${services_path}/cloudsyncservice:cloudsync_sa",
    "${utils_path}:libdistributedfileutils",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "dfs_service:cloudsync_kit_inner",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  defines = [ "private=public" ]
  use_exceptions = true
}

ohos_unittest("cloud_sync_callback_proxy_test") {
  module_out_path = "filemanagement/dfs_service"

  sources = [ "cloudsync_callback_proxy_test.cpp" ]

  include_dirs = [
    "${services_path}/cloudsyncservice/include/ipc",
    "${distributedfile_path}/test/unittests/cloudsync_api/cloudsync_impl/include",
  ]

  deps = [
    "${services_path}/cloudsyncservice:cloudsync_sa",
    "${utils_path}:libdistributedfileutils",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "dfs_service:cloudsync_kit_inner",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  defines = [ "private=public" ]

  use_exceptions = true
}

ohos_unittest("cloud_sync_callback_manager_test") {
  module_out_path = "filemanagement/dfs_service"

  sources = [ "cloudsync_callback_manager_test.cpp" ]

  include_dirs = [
    "${services_path}/cloudsyncservice/include/ipc",
    "${distributedfile_path}/test/unittests/cloudsync_api/cloudsync_impl/include",
  ]

  deps = [
    "${services_path}/cloudsyncservice:cloudsync_sa",
    "${utils_path}:libdistributedfileutils",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:want",
    "dfs_service:cloudsync_kit_inner",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  defines = [
    "private=public",
    "protected=public",
  ]

  use_exceptions = true
}

group("cloudsync_sa_ipc_test") {
  testonly = true
  deps = [
    ":cloud_sync_callback_manager_test",
    ":cloud_sync_callback_proxy_test",
    ":cloud_sync_service_stub_test",
    ":cloud_sync_service_test",
  ]
}
