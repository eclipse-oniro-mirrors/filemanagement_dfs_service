# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/filemanagement/dfs_service/distributedfile.gni")

ohos_unittest("dfsu_fd_guard_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "${utils_path}/system/src/dfsu_fd_guard.cpp",
    "dfsu_fd_guard_test.cpp",
  ]

  include_dirs = [
    "${utils_path}/system/include",
    "${utils_path}/log/include",
  ]

  deps = [
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
  ]

  external_deps = [
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "image_framework:image_native",
  ]

  defines = [ "private=public" ]
  defines += [
    "LOG_DOMAIN=0xD004307",
    "LOG_TAG=\"CLOUDSYNC_SA\"",
  ]
  use_exceptions = true
}

ohos_unittest("dfsu_access_token_helper_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "${utils_path}/system/src/dfsu_access_token_helper.cpp",
    "dfsu_access_token_helper_test.cpp",
    "reimplement/accesstoken_kit.cpp",
    "reimplement/accesstoken_kit_mock.cpp",
    "reimplement/ipc_skeleton.cpp",
  ]

  include_dirs = [
    "${distributedfile_path}/test/unittests/cloudsync_sa/system/reimplement",
    "${utils_path}/system/include",
    "${utils_path}/log/include",
  ]

  deps = [
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:uri_permission_mgr",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "ipc:ipc_core",
    "os_account:os_account_innerkits",
    "preferences:native_preferences",
  ]

  defines = [ "private=public" ]
  defines += [
    "LOG_DOMAIN=0xD004307",
    "LOG_TAG=\"CLOUDSYNC_SA\"",
  ]
  use_exceptions = true
}

ohos_unittest("dfsu_mount_argument_descriptors_test") {
  module_out_path = "dfs_service/dfs_service"

  sources = [
    "${utils_path}/system/src/dfsu_mount_argument_descriptors.cpp",
    "dfsu_mount_argument_descriptors_test.cpp",
  ]

  include_dirs = [
    "${utils_path}/system/include",
    "${utils_path}/log/include",
  ]

  deps = [
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
  ]

  external_deps = [
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "image_framework:image_native",
  ]

  defines = [ "private=public" ]
  defines += [
    "LOG_DOMAIN=0xD004307",
    "LOG_TAG=\"CLOUDSYNC_SA\"",
  ]
  use_exceptions = true
}
group("utils_system_src_test") {
  testonly = true
  deps = [
    ":dfsu_access_token_helper_test",
    ":dfsu_fd_guard_test",
    ":dfsu_mount_argument_descriptors_test",
  ]
}
