# Copyright (C) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/test.gni")
import("//foundation/filemanagement/dfs_service/distributedfile.gni")

module_output_path = "dfs_service/dfs_service_daemon/"

config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${distributedfile_path}/frameworks/native/distributed_file_inner/include",
    "${services_path}/distributedfiledaemon/include",
    "${services_path}/distributedfiledaemon/include/ipc",
  ]
}

ohos_moduletest("DistributedFileDaemonServiceTest") {
  module_out_path = module_output_path

  sources = [ "src/distributedfiledaemon_service_test.cpp" ]

  configs = [
    ":module_private_config",
    "${utils_path}:compiler_configs",
  ]

  defines = [
    "private=public",
    "LOG_TAG=\"distributedfileTest\"",
  ]

  deps = [
    "${services_path}/distributedfiledaemon:distributed_file_daemon_kit_inner",
    "${services_path}/distributedfiledaemon:libdistributedfiledaemon",
    "${utils_path}:libdistributedfileutils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "access_token:libaccesstoken_sdk",
    "app_file_service:sandbox_helper_native",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "dataclassification:data_transit_mgr",
    "device_auth:deviceauth_sdk",
    "device_manager:devicemanagersdk",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "file_api:securitylabel",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "init:libbegetutil",
    "ipc:ipc_single",
    "json:nlohmann_json_static",
    "os_account:os_account_innerkits",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "storage_service:storage_manager_sa_proxy",
    "zlib:shared_libz",
  ]
}
