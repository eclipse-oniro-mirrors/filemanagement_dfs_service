# Copyright (C) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/filemanagement/dfs_service/distributedfile.gni")
config("optimize-size") {
  cflags = [
    "-fvisibility=hidden",
    "-fdata-sections",
    "-ffunction-sections",
    "-Oz",
  ]
  cflags_cc = [
    "-fvisibility-inlines-hidden",
    "-Oz",
  ]
}
ohos_shared_library("cloudsync_sa") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = [
    "include",
    "include/data_sync",
    "include/cycle_task",
    "include/cycle_task/tasks",
    "include/data_sync/gallery_data_sync",
    "include/data_sync/cloud_disk_data_sync",
    "include/transport",
    "include/transport/softbus",
    "${clouddisk_database_path}/include",
    "${services_path}/cloudfiledaemon/include/cloud_disk",
    "${innerkits_native_path}/cloudsync_kit_inner",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/include",
    "${media_library_path}/interfaces/inner_api/media_library_helper/include",
    "${media_library_path}/frameworks/services/media_thumbnail/include",
    "${media_library_path}/frameworks/utils/include",
    "//third_party/e2fsprogs/e2fsprogs/lib",
  ]

  medialibrary_rdb_utils_include = [ "${media_library_path}/frameworks/innerkitsimpl/medialibrary_data_extension/include" ]

  include_dirs += medialibrary_rdb_utils_include

  data_sync = [
    "src/data_sync/data_syncer.cpp",
    "src/data_sync/sdk_helper.cpp",
    "src/data_sync/data_handler.cpp",
    "src/data_sync/rdb_data_handler.cpp",
    "src/data_sync/task.cpp",
    "src/data_sync/data_sync_notifier.cpp",
    "src/data_sync/data_sync_manager.cpp",
    "src/data_sync/data_syncer_rdb_store.cpp",
    "src/data_sync/sync_state_manager.cpp",
    "src/data_sync/task_state_manager.cpp",
  ]

  cycle_task = [
    "src/cycle_task/cycle_task.cpp",
    "src/cycle_task/cycle_task_runner.cpp",
    "src/cycle_task/tasks/optimize_storage_task.cpp",
    "src/cycle_task/tasks/periodic_check_task.cpp",
    "src/cycle_task/tasks/save_subscription_task.cpp",
  ]

  gallery_data_sync = [
    "src/data_sync/gallery_data_sync/gallery_data_syncer.cpp",
    "src/data_sync/gallery_data_sync/file_data_handler.cpp",
    "src/data_sync/gallery_data_sync/album_data_handler.cpp",
    "src/data_sync/gallery_data_sync/data_convertor.cpp",
    "src/data_sync/gallery_data_sync/file_data_convertor.cpp",
    "src/data_sync/gallery_data_sync/album_data_convertor.cpp",
  ]

  cloud_disk_data_sync = [
    "src/data_sync/cloud_disk_data_sync/cloud_disk_data_syncer.cpp",
    "src/data_sync/cloud_disk_data_sync/cloud_disk_data_convertor.cpp",
    "src/data_sync/cloud_disk_data_sync/cloud_disk_data_handler.cpp",
  ]

  transport = [
    "src/transport/file_transfer_manager.cpp",
    "src/transport/message_handler.cpp",
    "src/transport/softbus/session_manager.cpp",
    "src/transport/softbus/softbus_adapter.cpp",
    "src/transport/softbus/softbus_session.cpp",
  ]

  medialibrary_rdb_utils_source = [
    "${media_library_path}/frameworks/innerkitsimpl/medialibrary_data_extension/src/medialibrary_rdb_transaction.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/medialibrary_data_extension/src/medialibrary_rdb_utils.cpp",
  ]

  sources = [
    "${distributedfile_path}/frameworks/native/cloudsync_kit_inner/src/cloud_sync_common.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/src/base_column.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/src/media_column.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/src/medialibrary_business_record_column.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/src/photo_album_column.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/src/photo_map_column.cpp",
    "src/ipc/cloud_download_callback_manager.cpp",
    "src/ipc/cloud_download_callback_proxy.cpp",
    "src/ipc/cloud_sync_callback_manager.cpp",
    "src/ipc/cloud_sync_callback_proxy.cpp",
    "src/ipc/cloud_sync_service.cpp",
    "src/ipc/cloud_sync_service_stub.cpp",
    "src/ipc/download_asset_callback_manager.cpp",
    "src/ipc/download_asset_callback_proxy.cpp",
    "src/sync_rule/battery_status.cpp",
    "src/sync_rule/battery_status_listener.cpp",
    "src/sync_rule/cloud_status.cpp",
    "src/sync_rule/net_conn_callback_observer.cpp",
    "src/sync_rule/network_status.cpp",
    "src/sync_rule/screen_status.cpp",
    "src/sync_rule/screen_status_listener.cpp",
    "src/sync_rule/system_load.cpp",
    "src/sync_rule/user_status_listener.cpp",
  ]

  sources += data_sync
  sources += cycle_task
  sources += gallery_data_sync
  sources += cloud_disk_data_sync
  sources += medialibrary_rdb_utils_source
  sources += transport

  defines = [
    "LOG_DOMAIN=0xD004307",
    "LOG_TAG=\"CLOUDSYNC_SA\"",
  ]

  deps = [
    "${clouddisk_database_path}:clouddisk_database",
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
    "//third_party/e2fsprogs:libext2_uuid",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:dataobs_manager",
    "app_file_service:sandbox_helper_native",
    "common_event_service:cesfwk_innerkits",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "libfuse:libfuse",
    "netmanager_base:net_conn_manager_if",
    "os_account:os_account_innerkits",
    "power_manager:powermgr_client",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (cloudsync_service_hicollie_enable) {
    external_deps += [ "hicollie:libhicollie" ]
    defines += [ "HICOLLIE_ENABLE" ]
  }

  if (!dfs_service_feature_enable_cloud_adapter) {
    deps += [
      "${distributedfile_path}/adapter/cloud_adapter_example:cloud_adapter",
    ]
  } else {
    external_deps += [ "drivekit_native:drivekit" ]
  }

  if (cloudsync_service_resource_schedule) {
    external_deps += [ "resource_schedule_service:ressched_client" ]
    defines += [ "CLOUDSYNC_SERVICE_RESOURCE_SCHEDULE" ]
  }

  if (cloudsync_service_power) {
    external_deps += [ "battery_manager:batterysrv_client" ]

    defines += [ "SUPPORT_POWER" ]
  }
  configs = [ ":optimize-size" ]

  use_exceptions = true
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}

ohos_static_library("cloudsync_sa_static") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  include_dirs = [
    "include",
    "include/data_sync",
    "include/cycle_task",
    "include/cycle_task/tasks",
    "include/data_sync/gallery_data_sync",
    "include/data_sync/cloud_disk_data_sync",
    "include/transport",
    "include/transport/softbus",
    "${clouddisk_database_path}/include",
    "${services_path}/cloudfiledaemon/include/cloud_disk",
    "${innerkits_native_path}/cloudsync_kit_inner",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/include",
    "${media_library_path}/interfaces/inner_api/media_library_helper/include",
    "${media_library_path}/frameworks/services/media_thumbnail/include",
    "${media_library_path}/frameworks/utils/include",
    "//third_party/e2fsprogs/e2fsprogs/lib",
  ]

  medialibrary_rdb_utils_include = [ "${media_library_path}/frameworks/innerkitsimpl/medialibrary_data_extension/include" ]

  include_dirs += medialibrary_rdb_utils_include

  data_sync = [
    "src/data_sync/data_syncer.cpp",
    "src/data_sync/sdk_helper.cpp",
    "src/data_sync/data_handler.cpp",
    "src/data_sync/rdb_data_handler.cpp",
    "src/data_sync/task.cpp",
    "src/data_sync/data_sync_notifier.cpp",
    "src/data_sync/data_sync_manager.cpp",
    "src/data_sync/data_syncer_rdb_store.cpp",
    "src/data_sync/sync_state_manager.cpp",
    "src/data_sync/task_state_manager.cpp",
  ]

  cycle_task = [
    "src/cycle_task/cycle_task.cpp",
    "src/cycle_task/cycle_task_runner.cpp",
    "src/cycle_task/tasks/optimize_storage_task.cpp",
    "src/cycle_task/tasks/periodic_check_task.cpp",
    "src/cycle_task/tasks/save_subscription_task.cpp",
  ]

  gallery_data_sync = [
    "src/data_sync/gallery_data_sync/gallery_data_syncer.cpp",
    "src/data_sync/gallery_data_sync/file_data_handler.cpp",
    "src/data_sync/gallery_data_sync/album_data_handler.cpp",
    "src/data_sync/gallery_data_sync/data_convertor.cpp",
    "src/data_sync/gallery_data_sync/file_data_convertor.cpp",
    "src/data_sync/gallery_data_sync/album_data_convertor.cpp",
  ]

  cloud_disk_data_sync = [
    "src/data_sync/cloud_disk_data_sync/cloud_disk_data_syncer.cpp",
    "src/data_sync/cloud_disk_data_sync/cloud_disk_data_convertor.cpp",
    "src/data_sync/cloud_disk_data_sync/cloud_disk_data_handler.cpp",
  ]

  transport = [
    "src/transport/file_transfer_manager.cpp",
    "src/transport/message_handler.cpp",
    "src/transport/softbus/session_manager.cpp",
    "src/transport/softbus/softbus_adapter.cpp",
    "src/transport/softbus/softbus_session.cpp",
  ]

  medialibrary_rdb_utils_source = [
    "${media_library_path}/frameworks/innerkitsimpl/medialibrary_data_extension/src/medialibrary_rdb_transaction.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/medialibrary_data_extension/src/medialibrary_rdb_utils.cpp",
  ]

  sources = [
    "${distributedfile_path}/frameworks/native/cloudsync_kit_inner/src/cloud_sync_common.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/src/base_column.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/src/media_column.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/src/medialibrary_business_record_column.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/src/photo_album_column.cpp",
    "${media_library_path}/frameworks/innerkitsimpl/media_library_helper/src/photo_map_column.cpp",
    "src/ipc/cloud_download_callback_manager.cpp",
    "src/ipc/cloud_download_callback_proxy.cpp",
    "src/ipc/cloud_sync_callback_manager.cpp",
    "src/ipc/cloud_sync_callback_proxy.cpp",
    "src/ipc/cloud_sync_service.cpp",
    "src/ipc/cloud_sync_service_stub.cpp",
    "src/ipc/download_asset_callback_manager.cpp",
    "src/ipc/download_asset_callback_proxy.cpp",
    "src/sync_rule/battery_status.cpp",
    "src/sync_rule/battery_status_listener.cpp",
    "src/sync_rule/cloud_status.cpp",
    "src/sync_rule/net_conn_callback_observer.cpp",
    "src/sync_rule/network_status.cpp",
    "src/sync_rule/screen_status.cpp",
    "src/sync_rule/screen_status_listener.cpp",
    "src/sync_rule/user_status_listener.cpp",
  ]

  sources += data_sync
  sources += cycle_task
  sources += gallery_data_sync
  sources += cloud_disk_data_sync
  sources += medialibrary_rdb_utils_source
  sources += transport

  defines = [
    "LOG_DOMAIN=0xD004307",
    "LOG_TAG=\"CLOUDSYNC_SA\"",
  ]

  deps = [
    "${clouddisk_database_path}:clouddisk_database",
    "${utils_path}:libdistributedfiledentry",
    "${utils_path}:libdistributedfileutils",
    "//third_party/e2fsprogs:libext2_uuid",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:dataobs_manager",
    "app_file_service:sandbox_helper_native",
    "common_event_service:cesfwk_innerkits",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "libfuse:libfuse",
    "netmanager_base:net_conn_manager_if",
    "os_account:os_account_innerkits",
    "power_manager:powermgr_client",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (cloudsync_service_hicollie_enable) {
    external_deps += [ "hicollie:libhicollie" ]
    defines += [ "HICOLLIE_ENABLE" ]
  }

  if (!dfs_service_feature_enable_cloud_adapter) {
    deps += [
      "${distributedfile_path}/adapter/cloud_adapter_example:cloud_adapter",
    ]
  } else {
    external_deps += [ "drivekit_native:drivekit" ]
  }

  if (cloudsync_service_resource_schedule) {
    external_deps += [ "resource_schedule_service:ressched_client" ]
    defines += [ "CLOUDSYNC_SERVICE_RESOURCE_SCHEDULE" ]
  }

  if (cloudsync_service_power) {
    external_deps += [ "battery_manager:batterysrv_client" ]

    defines += [ "SUPPORT_POWER" ]
  }

  use_exceptions = true
  part_name = "dfs_service"
  subsystem_name = "filemanagement"
}
